{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for creating the VPC",
  "Outputs": {
    "VpcId": {
      "Description": "VPC created",
      "Value": {
        "Ref": "VPC"
      }
    },
    "pubsub1": {
      "Description": "Public subnet from  VPC",
      "Value": {
        "Ref": "PublicSubnet1"
      }
    },
    "pubsub2": {
      "Description": "Public subnet from  VPC",
      "Value": {
        "Ref": "PublicSubnet2"
      }
    },
    "ElasticacheSecurityGroup": {
      "Description": "ElasticacheSecurityGroup",
      "Value": {
        "Ref": "ElasticacheSecurityGroup"
      }
    },
    "LoadBalancerSecurityGroup": {
      "Description": "LoadBalancerSecurityGroup",
      "Value": {
        "Ref": "LoadBalancerSecurityGroup"
      }
    },
    "WebInstanveSecurityGroup": {
      "Description": "WebInstanveSecurityGroup",
      "Value": {
        "Ref": "WebInstanveSecurityGroup"
      }
    },
    "ECSInstanceSecurityGroup": {
      "Description": "ECSInstanceSecurityGroup",
      "Value": {
        "Ref": "ECSInstanceSecurityGroup"
      }
    }
  },
  "Parameters": {
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "AvailabilityZone1": {
      "Type": "String"
    },
    "AvailabilityZone2": {
      "Type": "String"
    },
    "pubcidr1": {
      "Type": "String"
    },
    "pubcidr2": {
      "Type": "String"
    },
    "vpccidr": {
      "Type": "String"
    },
    "Stackname": {
      "Type": "String"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsHostnames": true,
        "CidrBlock": {
          "Ref": "vpccidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "Stackname"
            }
          },
            {
              "Key": "Application",
              "Value": {
                "Ref": "Stackname"
              }
            },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "Stackname"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "IGW"
                ]
              ]
            }
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Ref": "AvailabilityZone1"
        },
        "CidrBlock": {
          "Ref": "pubcidr1"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "Stackname"
            }
          },
          {
            "Key": "Network",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public1"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public1"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Ref": "AvailabilityZone2"
        },
        "CidrBlock": {
          "Ref": "pubcidr2"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "Stackname"
            }
          },
          {
            "Key": "Network",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public2"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public2"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "Stackname"
            }
          },
          {
            "Key": "Network",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public"
                ]
              ]
            }
          }
        ]
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "Stackname"
            }
          },
          {
            "Key": "Network",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public"
                ]
              ]
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Stackname"
                  },
                  "public"
                ]
              ]
            }
          }
        ]
      }
    },
    "InboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutboundPublicNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": "99",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "PublicSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "ElasticacheSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Elasticache Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Ref": "vpccidr" }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "LoadBalancerSecurityGroup",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerSecurityGroup"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "WebInstanveSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "WebInstanveSecurityGroup",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": {
              "Ref": "vpccidr"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebInstanveSecurityGroup"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },




    "ECSInstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ECS Security Group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "WebInstanveSecurityGroup"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }





  }
}
